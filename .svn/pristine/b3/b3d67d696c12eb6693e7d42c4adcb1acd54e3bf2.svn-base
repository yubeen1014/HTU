package kr.or.ddit.controller.professor;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.service.professor.LectureNoticeService;
import kr.or.ddit.util.ArticlePage;
import kr.or.ddit.vo.LectureNoticeVO;
import kr.or.ddit.vo.LectureVO;

@Controller
@RequestMapping("/professor")
public class LectureNoticeController {
	
	@Autowired
	LectureNoticeService lectureNoticeService; 
	
	@ModelAttribute
	/** 개설된 강의에 대한 정보를 알기위한 메서드*/
	public void lectureList(Model model, String lecCd) {
		
		List<LectureVO> lectureVOList = this.lectureNoticeService.lectureList();
//		LectureVO lectureVO = this.lectureNoticeService.lectureDetail(lecCd);
		
		model.addAttribute("lectureVOList", lectureVOList);
//		model.addAttribute("lectureVO", lectureVO);
		
	}
	
	
	@GetMapping("/lecturenotice/list")
	public String lectureNoticeList(Model model,  @RequestParam(value = "keyword", required = false) String keyword,
			@RequestParam(value = "currentPage", required = false, defaultValue = "1") int currentPage) {
		
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("keyword", keyword);
		map.put("currentPage", currentPage);
		
		int total = this.lectureNoticeService.getTotal(map);
		
		List<LectureNoticeVO> lectureNoticeVOList = this.lectureNoticeService.lectureNoticeList(map);
		
		ArticlePage<LectureNoticeVO> articlePage = new ArticlePage<LectureNoticeVO>(total, currentPage, 10, lectureNoticeVOList);
		articlePage.setUrl("/professor/lecturenotice/list");
		
		model.addAttribute("data", articlePage);
		
		return "professor/lecture/detail/lecturenoticelist";
	}
	
	@GetMapping("lecturenotice/detail")
	public String lectureNoticeDetail(Model model, String lecnCd) {
		
		LectureNoticeVO lectureNoticeVO = this.lectureNoticeService.lectureNoticeDetail(lecnCd);
		
		model.addAttribute("lectureNoticeVO", lectureNoticeVO);
		
		return "";
	}
	
	@GetMapping("/lecturenotice/create")
	public String lectureNoticeCreateGet() {
		
		return "professor/lecture/detail/lecturenoticecreate";
	}
	
	@PostMapping("/lecturenotice/create")
	public String lectureNoticeCreatePost(LectureNoticeVO lectureNoticeVO) {
		
		int result = this.lectureNoticeService.lectureNoticeCreatePost(lectureNoticeVO);
		
		return "redirect:/professor/lecturenotice/list";
	}
	
	@PostMapping
	public String lectureNoticeUpdate(LectureNoticeVO lectureNoticeVO) {
		
		int result = this.lectureNoticeService.lectureNoticeUpdate(lectureNoticeVO);
		
		return "";
	}
}
