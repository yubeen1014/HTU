<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<%@ taglib prefix="sec"
	uri="http://www.springframework.org/security/tags"%>
	
<sec:authorize access="isAuthenticated()">
	<sec:authentication property="principal.userVO" var="userVO" />
</sec:authorize>
<div style="width:100%; height:100%; padding:30px; background-color:#ffffff;">
	<div style="border-bottom:1px solid #333; padding-bottom:20px; ">
		<!-- 타이틀 -->
		<input name="lecCd" value="${taskVO.taskNm}" style="font-size:28px; font-weight:600;" readonly="readonly"/>
		<!-- 교수명, 제출일  -->
		<div style="font-size:13px; display:flex; align-items:center; margin-top:10px;">
			<!-- 교수명 -->
			<input value="${taskVO.lectureVO.lectureApplyVO.professorVO.userVO.userNm}" style="font-size:15px; width:50px; text-align:left;" readonly="readonly"/>
			<span style="font-size:20px;">&nbsp;ㆍ&nbsp;</span>
			<!-- 제출일 -->
			<fmt:formatDate value="${taskVO.taskReg}" pattern="yyyy-MM-dd"/>
<!-- 			<input value="24.01.05" style="font-size:15px; width:70px;"/> -->
		</div>
		<!-- 점수배점 -->
		<div style="display:flex; font-size:15px; align-items:center;">
			<span style="height:23.6px; line-height:23.6px;">마감일&nbsp;&nbsp;:&nbsp;&nbsp;</span>
			<fmt:formatDate value="${taskVO.taskEddt}" pattern="yyyy-MM-dd"/>
<!-- 			<input value="100" style="font-size:15px; width:40px;"/> -->
		</div>
	</div>
  <div style="display:flex; margin-top:20px; height:72%; justify-content:space-between; border-bottom:1px solid #ccc; padding-bottom:20px; ">
		<!-- 과제내용  -->
		<div style="padding:20px; width:calc(100% - 300px); margin-right:20px;">
		${taskVO.taskCon}
		</div>
		<div class="submitDiv">
		<c:choose>
			<c:when test="${taskSubmitList[0].taskSubmitVO.tsubCd eq null}">
				<div style="position:relative; width:300px; height:150px; padding:20px; box-sizing:border-box; border:1px solid #ccc; border-radius:5px; margin-top:20px; box-shadow: 0 1px 2px 0 rgba(60,64,67,.3), 0 2px 6px 2px rgba(60,64,67,.15);">
					<div style="display:flex; justify-content:space-between; align-items:end;">	
						<div style="font-size:20px;">제출인원</div>
						<div style="font-size:15px;">없음</div>
					</div>
<!-- 					<input type="file" name="uploadFiles" id="submitFile" multiple="multiple" style="margin-top:20px; width:100%; font-size:14px; border:1px solid #ccc; line-height:23px; height:30px; background-color:#fff;border-radius:3px;"/> -->
<!-- 					<button type="button" id="tasksubmitButton" style="border:1px solid #ccc; border-radius:3px; background-color:#ebebeb; font-size:13px; height:30px; margin-top:5px; line-height:30px; position:absolute; right:20px; bottom:20px;">과제제출</button> -->
				</div>
			</c:when>
			<c:otherwise>
				<div style="position:relative; width:300px; height:150px; padding:20px; box-sizing:border-box; border:1px solid #ccc; border-radius:5px; margin-top:20px; box-shadow: 0 1px 2px 0 rgba(60,64,67,.3), 0 2px 6px 2px rgba(60,64,67,.15);">
					<div style="display:flex; justify-content:space-between; align-items:end;">	
						<div style="font-size:20px;">제출인원</div>
<!-- 						<div style="font-size:15px;">제출완료</div> -->
					</div>
					<c:forEach var="taskVO" items="${taskSubmitList}" varStatus="stat">
						<button class="btnTsubCd" type="button" data-tsub-cd="${taskVO.taskSubmitVO.tsubCd}"><a style="cursor: pointer;">${taskVO.taskSubmitVO.tsubCd}</a></button><br />
<%-- 						<a class="fileLink" href="/resources/upload/${vo.fileSvnm}"  style="margin-top:20px; width:100%; font-size:14px; border:1px solid #ccc; line-height:23px; height:30px; background-color:#fff;border-radius:3px;" download>${vo.fileOrnm}</a> --%>
					</c:forEach>
					<input type="file" name="uploadFiles" id="submitFile" multiple="multiple" style="margin-top:20px; width:100%; font-size:14px; border:1px solid #ccc; line-height:23px; height:30px; background-color:#fff;border-radius:3px;display: none;"/>
					<button type="button" id="tasksubmitUpdateButton" style="border:1px solid #ccc; border-radius:3px; background-color:#ebebeb; font-size:13px; height:30px; margin-top:5px; line-height:30px; position:absolute; right:20px; bottom:20px;">수정</button>
					<button type="button" id="tasksubmitUpdateSubmitButton" style="border:1px solid #ccc; border-radius:3px; background-color:#ebebeb; font-size:13px; height:30px; margin-top:5px; line-height:30px; position:absolute; right:20px; bottom:20px;display: none;">제출</button>
				</div>
			</c:otherwise>
		</c:choose>
		</div>
  </div>	
	<!-- 목록 버튼 -->
	<button class="btn-two mini dark" onclick="goBack()"
			style="position:relative; left:50%; transform:translateX(-50%);width:80px; height:30px; font-size:14px;">
	목목</button>
	<!-- 목록 버튼 끝 -->
</div>


<script type="text/javascript">
logout = function() {
	$("#logoutForm").submit();
}
	
$(function(){
	$("#lecNm").text($(".sub_title").text());
	
	$('.btnTsubCd').on('click', function(){
		const tsubCd = $(this).data('tsubCd');
		console.log('tsubCd', tsubCd);
	});
	
	
	$("#btnTaskUpdate").on("click", function(){
		
		$('.free_box').hide();
		$('.container').show();
		
		
	});
	
	$("#btnUpdateCancle").on("click", function(){
		sweetConfirmUpdateCancle();
	});
	
	function sweetConfirmUpdateCancle() {
	    Swal.fire({
	        text: "수정을 취소 하시겠습니까?",
	        icon: "question",
	        width: 300,
	        showCancelButton: true,
	        confirmButtonColor: "#3085d6",
	        cancelButtonColor: "#d33",
	        confirmButtonText: "네",
	        cancelButtonText: "아니오"
	    }).then((result) => {
	        console.log(result);
	        if (result.isConfirmed) {
	            // "네"를 클릭했을 때의 동작
	        	$('.free_box').show();
	    		$('.container').hide();
	        } else {
	        	
	        }
	    });
	}
	
	
	$("#btnCancle").on("click", function(){
// 		history.back();
		location.href = "/professor/task/list?lecCd=" + ${taskVO.lecCd};

	});
	$("#btnDelete").on("click", function(){
		console.log("딜리트버튼")
		
// 		var lecCD = ${taskVO.lecCd};
		data = {
			"taskCd":$("#taskCd").val()
		};
		$.ajax({
			url:"/professor/task/delete?${_csrf.parameterName}=${_csrf.token}",
			contentType:"application/json;charset=utf-8",
			data:JSON.stringify(data),
			type:"post",
			dataType:"json",
			beforeSend : function(xhr) {
				xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
			},
			success : function(result) {
				sweetConfirmDelete();
			}
		});

	});
	function sweetConfirmDelete() {
	    Swal.fire({
	        text: "삭제하시겠습니까?",
	        icon: "question",
	        width: 300,
	        showCancelButton: true,
	        confirmButtonColor: "#3085d6",
	        cancelButtonColor: "#d33",
	        confirmButtonText: "네",
	        cancelButtonText: "아니오"
	    }).then((result) => {
	        console.log(result);
	        if (result.isConfirmed) {
	            // "네"를 클릭했을 때의 동작
	        	alertSuccess("삭제되었습니다." ,"/professor/task/list?lecCd=" + ${taskVO.lecCd});
	        } else {
	            // "아니오"를 클릭했을 때의 동작
	            alertError('삭제 취소하였습니다');
	        }
	    });
	}
	
	
    $("#btnTaskSubmit").on("click", function () {
        sweetConfirmUpdate();

    });
	
	function sweetConfirmUpdate() {
	    Swal.fire({
	        text: "수정하시겠습니까?",
	        icon: "question",
	        width: 300,
	        showCancelButton: true,
	        confirmButtonColor: "#3085d6",
	        cancelButtonColor: "#d33",
	        confirmButtonText: "네",
	        cancelButtonText: "아니오"
	    }).then((result) => {
	        console.log(result);
	        if (result.isConfirmed) {
	            // "네"를 클릭했을 때의 동작
	            $('#taskFrm').submit();
	        } else {
	            // "아니오"를 클릭했을 때의 동작
	            alertError('수정을 취소하였습니다');
	        }
	    });
	}
});	
</script>



