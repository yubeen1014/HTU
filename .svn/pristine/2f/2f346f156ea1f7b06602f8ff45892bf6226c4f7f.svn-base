package kr.or.ddit.controller.common;

import java.security.Principal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.service.common.FreeBoardService;
import kr.or.ddit.vo.BoardVO;
import kr.or.ddit.vo.NoticeBoardVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping(value = "/common/board/free")
@Controller
public class FreeBoardController {

	@Autowired
	FreeBoardService freeBoardService;

	@GetMapping("/list")
	public String list(Model model) {

		List<BoardVO> boardList = this.freeBoardService.list();

		model.addAttribute("boardList", boardList);

		return "board/free_board/list";

	}

	@GetMapping("/create")
	public String create() {
		return "board/free_board/create";
	}

	@PostMapping("/create")
	public String create(BoardVO boardVO) {
		// BoardVO(bdCd=null, userCd=1001, comdCd=null, bdTitle=1212, bdCon=sfd,
		// bdReg=null, bdUdt=null, bdCnt=0, userVO=null,
		// userNm=작성자, fileList=null, commonDetailVO=null,
		// uploadFiles=[org.springframew..], commentList=null)
		log.info("boardVO ==> {}", boardVO);
		int cnt = this.freeBoardService.create(boardVO);

		if (cnt > 0)
			return "redirect:/common/board/free/list?bdCd=" + boardVO.getBdCd();
		else
			return "redirect:/common/board/free/list";
	}

	@GetMapping("/detail")
	public String detail(String bdCd, Model model) {
		// 게시글 상세 정보 조회
		BoardVO boardVO = this.freeBoardService.detail(bdCd);

		// 모델에 추가
		model.addAttribute("boardVO", boardVO);

		// 상세 페이지로 이동
		return "board/free_board/detail";
	}

	@GetMapping("/update")
	public String update(String bdCd, Model model) {

		BoardVO boardVO = this.freeBoardService.detail(bdCd);

		model.addAttribute("boardVO", boardVO);

		return "board/free_board/update";

	}

	@PostMapping("/update")
	public String update(BoardVO boardVO) {

		log.info("boardVO ==> {}", boardVO);

		int result = this.freeBoardService.update(boardVO);

		if (result > 0)
			return "redirect:/common/board/free/detail?bdCd=" + boardVO.getBdCd();
		else
			return "redirect:/common/board/free/list";

	}

	@GetMapping("/count")
	@ResponseBody
	public int count(String bdCd) {

		int cnt = this.freeBoardService.count(bdCd);

		return cnt;
	}

	@GetMapping("/delete")
	public String delete(String bdCd) {

		int result = this.freeBoardService.delete(bdCd);

		if (result > 0)
			return "redirect:/common/board/free/list";
		else
			return "redirect:/common/board/free/detail?bdCd=" + bdCd;

	}

}
