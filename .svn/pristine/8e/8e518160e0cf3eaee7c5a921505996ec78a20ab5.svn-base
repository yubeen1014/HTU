<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.ApprovalMapper">

	<resultMap type="approvalVO" id="appMap">
		<result property="appCd" column="APP_CD" />
		<result property="userCd" column="USER_CD" />
		<result property="comdCd" column="COMD_CD" />
		<result property="appTarget" column="APP_TARGET" />
		<result property="appYn" column="APP_YN" />
		<result property="appReg" column="APP_REG" />
		<result property="appProdt" column="APP_PRODT" />
		<result property="appRet" column="APP_RET" />
		<result property="appPcd" column="APP_PCD" />
		<result property="rnum" column="RNUM" />
	</resultMap>

	<resultMap type="lectureApplyVO" id="lectureApplyVOMap">
		<result property="lecaCd" column="LECA_CD" />
		<result property="proCd" column="PRO_CD" />
		<result property="appCd" column="APP_CD" />
		<result property="depCd" column="DEP_CD" />
		<result property="roomCd" column="ROOM_CD" />
		<result property="lecaYear" column="LECA_YEAR" />
		<result property="lecaSem" column="LECA_SEM" />
		<result property="lecaNm" column="LECA_NM" />
		<result property="lecaCon" column="LECA_CON" />
		<result property="lecaTrg" column="LECA_TRG" />
		<result property="lecaCrd" column="LECA_CRD" />
		<result property="lecaPer" column="LECA_PER" />
		<result property="lecaCap" column="LECA_CAP" />
		<result property="lecaSche" column="LECA_SCHE" />
		<result property="lecaBook" column="LECA_BOOK" />
		<result property="lecaNote" column="LECA_NOTE" />
		<result property="lecaEva" column="LECA_EVA" />
		<result property="lecaTemp" column="LECA_TEMP" />
		<result property="lecaStdt" column="LECA_STDT" />
		<result property="lecaEddt" column="LECA_EDDT" />
		<result property="lecaType" column="LECA_TYPE"/>
		<result property="rnum" column="RNUM" />
		<association property="approvalVO" resultMap="appMap"></association>
		<association property="professorVO" resultMap="professorVOMap"></association>
		<association property="departmentVO" resultMap="departmentVOMap"></association>
	</resultMap>
	
	<resultMap type="crewVO" id="crewMap">
		<result property="crCd" column="CR_CD"/>
		<result property="roomCd" column="ROOM_CD"/>
		<result property="appCd" column="APP_CD"/>
		<result property="stuCd" column="STU_CD"/>
		<result property="fileCd" column="FILE_CD"/>
		<result property="crLeader" column="CR_LEADER"/>
		<result property="crNm" column="CR_NM"/>
		<result property="stuNm" column="STU_NM"/>
		<association property="approvalVO" resultMap="appMap"></association>
	</resultMap>

	<resultMap type="professorVO" id="professorVOMap">
		<result property="proCd" column="PRO_CD" />
		<result property="depCd" column="DEP_CD" />
		<result property="roomCd" column="ROOM_CD" />
		<result property="proJoin" column="PRO_JOIN" />
		<result property="proRet" column="PRO_RET" />
		<result property="proPos" column="PRO_POS" />
		<result property="rnum" column="RNUM" />
		<association property="userVO" resultMap="userVOMap"></association>
		<association property="departmentVO" resultMap="departmentVOMap"></association>
		<association property="roomVO" resultMap="roomVOMap"></association>
	</resultMap>

	<resultMap type="userVO" id="userVOMap">
		<result property="userCd" column="USER_CD" />
		<result property="fileCd" column="FILE_CD" />
		<result property="userNm" column="USER_NM" />
		<result property="userNme" column="USER_NME" />
		<result property="userTel" column="USER_TEL" />
		<result property="userZip" column="USER_ZIP" />
		<result property="userAddr1" column="USER_ADDR1" />
		<result property="userAddr2" column="USER_ADDR2" />
		<result property="userReg1" column="USER_REG1" />
		<result property="userReg2" column="USER_REG2" />
		<result property="userMail" column="USER_MAIL" />
		<result property="userPass" column="USER_PASS" />
		<result property="userBank" column="USER_BANK" />
		<result property="userDepo" column="USER_DEPO" />
		<result property="userAcc" column="USER_ACC" />
		<result property="comdCd" column="COMD_CD" />
		<result property="rnum" column="RNUM" />
	</resultMap>
	
	<resultMap type="departmentVO" id="departmentVOMap">
		<result property="depCd" column="DEP_CD"/>
		<result property="colCd" column="COL_CD"/>
		<result property="depNm" column="DEP_NM"/>
		<result property="depMrc" column="DEP_MRC"/>
		<result property="depMoc" column="DEP_MOC"/>
		<result property="depCrc" column="DEP_CRC"/>
		<result property="depCoc" column="DEP_COC"/>
		<result property="depCap" column="DEP_CAP"/>
		<result property="depTel" column="DEP_TEL"/>
		<result property="depFee" column="DEP_FEE"/>
		<result property="rnum" column="RNUM" />
		<association property="collegeVO" resultMap="collegeVOMap"></association>
	</resultMap>
	
	<resultMap type="roomVO" id="roomVOMap">
		<result property="roomCd" column="ROOM_CD"/>
		<result property="bldCd" column="BLD_CD"/>
		<result property="roomPur" column="ROOM_PUR"/>
		<result property="roomCap" column="ROOM_CAP"/>
		<result property="roomTel" column="ROOM_TEL"/>
		<association property="buildingVO" resultMap="buildingVOMap"></association>
	</resultMap>
	
	<resultMap type="buildingVO" id="buildingVOMap">
		<result property="bldCd" column="BLD_CD"/>
		<result property="colCd" column="COL_CD"/>
		<result property="bldZip" column="BLD_ZIP"/>
		<result property="bldAddr1" column="BLD_ADDR1"/>
		<result property="bldAddr2" column="BLD_ADDR2"/>
	</resultMap>
	
	<resultMap type="collegeVO" id="collegeVOMap">
		<result property="colCd" column="COL_CD"/>
		<result property="colCrd" column="COL_CRD"/>
	</resultMap>
	
	<resultMap type="postReportVO" id="postReportMap">
	  <result property="prCd" column="PR_CD"/>
	  <result property="userCd" column="USER_CD"/>
	  <result property="appCd" column="APP_CD"/>
	  <result property="bdCd" column="BD_CD"/>
	  <result property="prRsn" column="PR_RSN"/>
	  <result property="prDetail" column="PR_DETAIL"/>
   </resultMap>
	
	<resultMap type="dormitoryVO" id="dormitoryMap">
		<result property="domCd" column="DOM_CD"/>
		<result property="bldCd" column="BLD_CD"/>
		<result property="stuCd" column="STU_CD"/>
		<result property="appCd" column="APP_CD"/>
		<result property="comdCd" column="COMD_CD"/>
		<result property="domYear" column="DOM_YEAR"/>
		<result property="domSem" column="DOM_SEM"/>
		<association property="userVO" resultMap="userVOMap"></association>
		<association property="approvalVO" resultMap="appMap"></association>
	</resultMap>
	
	<!-- 결재데이터 생성  -->
	<insert id="insert" parameterType="approvalVO">
		<selectKey resultType="String" keyProperty="appCd" order="BEFORE">
				SELECT approval_SEQ.nextVal
				FROM DUAL
		</selectKey>
		INSERT INTO APPROVAL (APP_CD, USER_CD, COMD_CD, APP_TARGET)
		VALUES(#{appCd}, #{userCd}, #{comdCd}, #{appTarget})	
	</insert>
	<!-- 강의계획신청 리스트  -->
	<select id="getLectureApplyList" parameterType="hashMap" resultMap="lectureApplyVOMap">
		SELECT T.* FROM(
        SELECT ROW_NUMBER() OVER(ORDER BY LA.LECA_CD) RNUM,
	        LA.LECA_CD, LA.PRO_CD, LA.ROOM_CD, LA.LECA_YEAR, LA.LECA_SEM, LA.LECA_NM, LA.LECA_CON, LA.LECA_TRG, 
	        LA.LECA_CRD, LA.LECA_PER, LA.LECA_CAP, LA.LECA_SCHE, LA.LECA_BOOK, LA.LECA_NOTE, LA.LECA_EVA, LA.LECA_TEMP,
	        LA.LECA_STDT, LA.LECA_EDDT, LA.LECA_TYPE,
	        
	        A.APP_CD, A.COMD_CD, A.APP_TARGET, A.APP_YN, A.APP_REG, A.APP_PRODT, A.APP_RET, A.APP_PCD,
	        
	        P.PRO_JOIN, P.PRO_RET, P.PRO_POS,
	        
	        U.USER_CD, U.FILE_CD, U.USER_NM, U.USER_NME, U.USER_TEL, U.USER_ZIP, U.USER_ADDR1, U.USER_ADDR2, U.USER_REG1, U.USER_REG2, U.USER_MAIL, 
	        U.USER_PASS, U.USER_BANK, U.USER_DEPO, U.USER_ACC,
	        
	        D.DEP_CD, D.COL_CD, D.DEP_NM, D.DEP_MRC, D.DEP_MOC, D.DEP_CRC, D.DEP_COC, D.DEP_CAP, D.DEP_TEL, D.DEP_FEE
		FROM    LECTURE_APPLY LA, APPROVAL A, PROFESSOR P, USERS U, DEPARTMENT D
		WHERE   1 = 1
		<include refid="where"></include>
		AND     LA.APP_CD = A.APP_CD
		AND     LA.PRO_CD = P.PRO_CD
		AND     P.PRO_CD = U.USER_CD
		AND     LA.DEP_CD = D.DEP_CD
		AND		A.COMD_CD = 'APPR02') T
		WHERE RNUM BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10)
	
<!--         		SELECT  LECA_CD, LA.PRO_CD, LA.APP_CD, LA.DEP_CD, LA.ROOM_CD, LECA_YEAR, LECA_SEM, LECA_NM, LECA_CON, LECA_TRG,  -->
<!-- 		        LECA_CRD, LECA_PER, LECA_CAP, LECA_SCHE, LECA_BOOK, LECA_NOTE, LECA_EVA, LECA_TEMP, LECA_STDT, LECA_EDDT, -->
<!-- 		        A.APP_CD, A.USER_CD, A.COMD_CD, APP_TARGET, APP_YN, APP_REG, APP_PRODT, APP_RET, APP_PCD, -->
<!-- 		        P.PRO_CD, P.DEP_CD, P.ROOM_CD, PRO_JOIN, PRO_RET, PRO_POS, -->
<!-- 		        U.USER_CD, FILE_CD, USER_NM, USER_NME, USER_TEL, USER_ZIP, USER_ADDR1, USER_ADDR2, USER_REG1, USER_REG2, USER_MAIL,  -->
<!-- 		        USER_PASS, USER_BANK, USER_DEPO, USER_ACC, U.COMD_CD, -->
<!-- 		        D.DEP_CD, COL_CD, DEP_NM, DEP_MRC, DEP_MOC, DEP_CRC, DEP_COC, DEP_CAP, DEP_TEL, DEP_FEE -->
<!-- 		FROM    LECTURE_APPLY LA, APPROVAL A, PROFESSOR P, USERS U, DEPARTMENT D -->
<!-- 		WHERE   LA.APP_CD = A.APP_CD -->
<!-- 		AND     LA.PRO_CD = P.PRO_CD -->
<!-- 		AND     P.PRO_CD = U.USER_CD -->
<!-- 		AND     LA.DEP_CD = D.DEP_CD -->
<!-- 		AND		A.COMD_CD = 'APPR02' -->
	</select>
	

	<!-- 신고목록 리스트 -->
	<select id="getPostReportList" parameterType="hashMap" resultMap="postReportMap">
		SELECT T.* FROM(
		SELECT ROW_NUMBER() OVER(ORDER BY P.PR_CD) RNUM,
		    P.PR_CD, P.USER_CD, P.APP_CD, P.BD_CD, P.PR_RSN, P.PR_DETAIL,
		    
		    A.COMD_CD, A.APP_TARGET, A.APP_YN, A.APP_REG, A.APP_PRODT, A.APP_RET, A.APP_PCD,
		    
		    B.BD_TITLE, B.BD_CON, B.BD_REG, B.BD_UDT, B.BD_CNT, B.FILE_CD, B.COMD_CD AS CD,
		                
		    U.USER_NM, U.USER_NME, U.USER_TEL, U.USER_ZIP, U.USER_ADDR1, U.USER_ADDR2, U.USER_REG1, U.USER_REG2, U.USER_MAIL, 
		    U.USER_PASS, U.USER_BANK, U.USER_DEPO, U.USER_ACC
		    
		FROM    POST_REPORT P, APPROVAL A, USERS U, BOARD B     
		WHERE   1 = 1   
		AND     P.APP_CD = A.APP_CD   
		AND     P.USER_CD = U.USER_CD   
		AND     P.BD_CD = B.BD_CD   
		AND     A.COMD_CD = 'APPR04') T   
		WHERE RNUM BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10)
	</select>
	
	<!-- 기숙사 신청서 리스트 -->
	<select id="getDormitoryList" parameterType="hashMap" resultMap="dormitoryMap">
		SELECT T.* FROM(
		SELECT ROW_NUMBER() OVER(ORDER BY D.DOM_CD) RNUM,
		   D.DOM_CD, D.BLD_CD, D.STU_CD, D.COMD_CD, D.DOM_YEAR, D.DOM_SEM, D.APP_CD,
		    
           A.APP_TARGET, A.APP_YN, A.APP_REG, A.APP_PRODT, A.APP_RET, 
		    
		   B.COL_CD, B.BLD_ZIP, B.BLD_ADDR1, B.BLD_ADDR2,
		                
		    U.USER_NM, U.USER_NME, U.USER_TEL, U.USER_ZIP, U.USER_ADDR1, U.USER_ADDR2, U.USER_REG1, U.USER_REG2, U.USER_MAIL, 
		    U.USER_PASS, U.USER_BANK, U.USER_DEPO, U.USER_ACC
		    
		FROM    DORMITORY D, APPROVAL A, USERS U, BUILDING B     
		WHERE   1 = 1   
		AND     D.APP_CD = A.APP_CD   
		AND     D.STU_CD = U.USER_CD   
		AND     D.BLD_CD = B.BLD_CD  
		AND     A.COMD_CD = 'APPR05') T   
		WHERE RNUM BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10)
	</select>
	
	<!-- 동아리 개설 결재 리스트 -->
	<select id="crewAppList" parameterType="String" resultMap="crewMap">
<!-- 		SELECT APP_CD, USER_CD, COMD_CD, APP_TARGET, APP_YN, APP_REG, APP_PRODT, APP_RET, APP_PCD -->
<!-- 		FROM   APPROVAL -->
<!-- 		WHERE  COMD_CD = 'APPR03' -->
<!-- 		AND    APP_TARGET = #{appTarget} -->
<!-- 		ORDER BY APP_REG DESC -->
		SELECT A.APP_CD, A.USER_CD, A.COMD_CD, A.APP_TARGET, A.APP_YN, A.APP_REG, A.APP_PRODT, A.APP_RET, A.APP_PCD
		       , B.CR_CD, B.ROOM_CD, B.APP_CD, B.STU_CD, B.CR_LEADER, B.CR_NM, B.CR_YN
		FROM   APPROVAL A, CREW B
		WHERE  COMD_CD = 'APPR03'
		AND    A.APP_CD = B.APP_CD
		AND    APP_TARGET = #{appTarget}
		ORDER BY APP_REG DESC
	</select>
	
	<!-- 동아리 가입 결재 리스트 -->
	<select id="crewJoinList" parameterType="String" resultMap="crewMap">
		SELECT A.CR_CD, A.ROOM_CD, A.CR_LEADER, A.CR_NM
		       , B.USER_CD, B.APP_CD, B.APP_YN, C.USER_NM STU_NM
		FROM   CREW A, APPROVAL B, USERS C
		WHERE  A.CR_LEADER = B.APP_TARGET
		AND    B.USER_CD = C.USER_CD
		AND    B.APP_YN = 0
		AND    A.CR_CD =  #{crCd}
		ORDER BY B.APP_REG
	</select>

	<!-- 반려시 반려사유등록  -->
	<sql id="appYnN">
		<if test="appYn == 2">
			, APP_RET = #{appRet}
		</if>
	</sql>
	<!-- 1 = 승인 2 = 반려로 결재정보 업데이트 -->	
	<update id="updateApprovalYn" parameterType="approvalVO">
	 	UPDATE
	 		APPROVAL
	 	SET
	 		APP_YN = #{appYn},
	 		APP_PRODT = SYSDATE
	 		<include refid="appYnN"></include>
	 	WHERE
	 		APP_CD = #{appCd}
	</update>
	
	<sql id="where">
		<if test="keyword != null and keyword != ''">
			AND (LECA_NM LIKE '%' || #{keyword} || '%')
		</if>
	</sql>
	<!-- 페이징처리 -->
	<select id="getTotal" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) FROM LECTURE_APPLY
		WHERE 1 = 1
		<include refid="where"></include>
	</select>
	
	
</mapper>