package kr.or.ddit.controller.professor;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import kr.or.ddit.service.professor.TestService;
import kr.or.ddit.vo.LectureApplyVO;
import kr.or.ddit.vo.TestQuestionVO;
import kr.or.ddit.vo.TestVO;
import kr.or.ddit.vo.UserVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequestMapping("/professor/test")
public class TestController {

	@Autowired
	TestService testService;
	
	/**
	 * 해당 강의 정보
	 * @param model
	 * @param lecCd
	 */
	@ModelAttribute
	public void lectureVO(Model model, @RequestParam String lecCd) {
		
		LectureApplyVO lectureVO = this.testService.lectureInfo(lecCd);

		model.addAttribute("lectureVO", lectureVO);
	}
	
	/**
	 * 시험 목록
	 * @param model
	 * @param lecCd
	 * @return
	 */
	@GetMapping("/testList")
	public String testList(Model model, @RequestParam String lecCd) {
		
		List<TestVO> testVOList = this.testService.testList(lecCd);
		log.info("testList->testVOList : {}", testVOList);
		
		model.addAttribute("testVOList", testVOList);
		
		return "professor/lecture/detail/testlist";
	}
	
	/**
	 * 시험 등록
	 * @return
	 */
	@GetMapping("/testCreate")
	public String testCreate() {
		return "professor/lecture/detail/testcreate";
	}
	
	@PostMapping("/testCreatePost")
	public String testCreatePost(TestVO testVO) {
		
		testVO.setTestCd(testVO.getLecCd() + testVO.getTestOpt());
		log.info("testCreatePost->testVO : {}", testVO);
		
		int result = this.testService.testCreatePost(testVO);
		log.info("testCreatePost->testVO2 : {}", testVO);
		
		if(result > 0) {
			return "redirect:/professor/test/testList?lecCd=" + testVO.getLecCd();
		}else {
			return null;
		}
	}
	
	/**
	 * 시험 상세
	 * @param testCd
	 * @param model
	 * @return
	 */
	@GetMapping("/testDetail")
	public String testDetail(@RequestParam String testCd, Model model) {
		
		log.info("testDetail->testCd : {}", testCd);
		
		TestVO testVO = this.testService.testDetail(testCd);
		log.info("testDetail->testVO : {}", testVO);
		
		//시험 문제 리스트
		List<TestQuestionVO> tqVOList = this.testService.tqVOList(testCd);
		log.info("testDetail->tqVOList : {}", tqVOList);
		
		model.addAttribute("tqVOList", tqVOList);
		model.addAttribute("testVO", testVO);
		
		return "professor/lecture/detail/testdetail";
	}
	
	/**
	 * 시험 수정
	 * @param testVO
	 * @return
	 */
	@PostMapping("/testUpdate")
	public String testUpdate(TestVO testVO) {
		
		log.info("testUpdate->testVO : {}", testVO);
		
		int result = this.testService.testUpdate(testVO);
		
		if(result > 0) {
			return "redirect:/professor/test/testList?lecCd=" + testVO.getLecCd();
		}else {
			return null;
		}
	}
























}
